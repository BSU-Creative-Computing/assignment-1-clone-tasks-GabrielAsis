$circle-sizes: 70px,80px,90px,100px; /*sizes for circles in a list*/
$colors:#4e89ae, #43658b, #ed6663, #ffa372, #8ccff7, #444; /*colors to be used in this page in  a list*/ 

/*@mixin for circle's backround-color, width, and height*/
@mixin circle-styling($bg-color, $size){
    background-color: $bg-color;
    width: $size;    
    height: $size;
}

/*@mixin for media querie max-width*/
@mixin max-width-breakpoint($max-width){
    @media screen and (max-width: $max-width) {
        @content;
    }
}

/*removes all spacing in page*/
*{
    margin: 0;
    padding: 0;
}

/*styling of immages*/
.image{
    display: flex;
    justify-content: center;
    background-color: nth($colors, 5);
    margin-bottom: 60px;

    /*hides the other image resolutions*/
    .three-hundred, .two-hundred{
        display: none;
    }
}

/*styling for rows*/
.row-container{
    margin-top: 10px;
    /*setting up default size and hover color for rows*/
    .row{
        width: 100%;
        height: 40px;
        &:hover{
            background-color: nth($colors, 6);
            cursor: pointer;
        }
    }

    /*changing indivindual row's color*/
    .light-blue{
        background-color: nth($colors, 1); 
    }
    
    .blue{
        background-color: nth($colors, 2);
    }
    
    .red{
        background-color: nth($colors, 3);
    }
    
    .yellow{
        background-color: nth($colors, 4);
    }
}

/*styling for circles*/
.circle-container{
    display: block;
    margin: auto;
    width: 100%;
    margin-top: 50px;
    margin-bottom: 50px;

    /*setting up default radius, spacing, and hover color to circles*/
    .circle{
        border-radius: 50%;
        margin: auto;
        margin-top: 5px;
        margin-bottom: 5px;
        &:hover{
            background-color: nth($colors , 6);
            cursor: pointer;
        }
    }

    /*changing individual circle's size and color*/
    .smaller{
        @include circle-styling(nth($colors, 1),nth($circle-sizes, 1))
    }
    
    .small{
        @include circle-styling(nth($colors, 2),nth($circle-sizes, 2 ))
    }
    
    .big{
        @include circle-styling(nth($colors, 3),nth($circle-sizes, 3) )
    }
    
    .bigger{
        @include circle-styling(nth($colors, 4),nth($circle-sizes, 4) )
    }
}

/*footer styling*/
footer{
    background-color: nth($colors, 5);
    width: 100%;
    height: 50px;
}

/*media querie to change if circles are stack vertically or horizontally*/
@media (min-width: 621px){
    .circle-container{
        display: flex;
        justify-content: center;
        align-items: center;
        width: 52vh;
    }
}

/*using @include to use @mixin earlier for max-width queries to display hidden image resolutions*/
@include max-width-breakpoint(800px){
    .image{        
        .three-hundred{
            display: block;
        }
    }

    .four-hundred{
        display: none;
    }
}

/*using @include to use @mixin earlier for max-width queries to display hidden image resolutions*/
@include max-width-breakpoint(481px){
    .image{        
        .two-hundred{
            display: block;
        }

        .three-hundred{
            display: none;
        }
    }

    .four-hundred{
        display: none;
    }
}